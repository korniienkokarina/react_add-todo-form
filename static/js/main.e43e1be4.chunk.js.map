{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","getNewId","list","Math","max","App","useState","setList","setTitle","setUser","titleIsCorrect","setTitleIsCorrect","userIsCorrect","setUserIsCorrect","action","method","onSubmit","event","preventDefault","trim","type","placeholder","value","onChange","target","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e43e1be4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, completed, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && ('TodoInfo--completed')}`}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    <div>\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </div>\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst getNewId = (list: Todo[]) => {\n  return Math.max(...list.map((todo) => todo.id)) + 1;\n};\n\nexport const App: React.FC = () => {\n  const [list, setList] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [titleIsCorrect, setTitleIsCorrect] = useState(true);\n  const [userIsCorrect, setUserIsCorrect] = useState(true);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!title.trim()) {\n      setTitleIsCorrect(false);\n    }\n\n    if (!user) {\n      setUserIsCorrect(false);\n    }\n\n    if (title.trim() && user) {\n      setList(\n        [...list, {\n          id: getNewId(list),\n          userId: +user,\n          title,\n          completed: false,\n          user: getUser(+user),\n        }],\n      );\n\n      setTitle('');\n      setUser('');\n    }\n  };\n\n  const titleHandler = (value: React.SetStateAction<string>) => {\n    setTitle(value);\n    setTitleIsCorrect(true);\n  };\n\n  const userHandler = (value: React.SetStateAction<string>) => {\n    setUser(value);\n    setUserIsCorrect(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => titleHandler(event.target.value)}\n          />\n          {!titleIsCorrect && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(event) => userHandler(event.target.value)}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(userFromServer => {\n              return (\n                <option value={userFromServer.id} key={userFromServer.id}>\n                  {userFromServer.name}\n                </option>\n              );\n            })}\n          </select>\n          {!userIsCorrect && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={list} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}